# Pipeline for apig staging

trigger: none

# To do: Add commit-message and source_type as pipeline parameters (vs. pipeline variable)
# parameters:
# - name: commit-message
#   type: string
# - name: source_type
#   type: string
#   default: 'CONFIG'

variables:
  ${{ if startsWith(variables['Build.DefinitionName'], 'wm_test_apigw') }}:
    tenant: playground
  ${{ if startsWith(variables['Build.DefinitionName'], 'wm_apigw') }}:
    tenant: realworld
  ${{ if endsWith(variables['Build.DefinitionName'], 'config') }}:
    sourceType: CONFIG
  ${{ if endsWith(variables['Build.DefinitionName'], 'build') }}:
    sourceType: BUILD
  ${{ if endsWith(variables['Build.DefinitionName'], 'dev_int') }}:
    sourceType: DEV-INT
  ${{ if endsWith(variables['Build.DefinitionName'], 'dev_ext') }}:
    sourceType: DEV-EXT
  ${{ if endsWith(variables['Build.DefinitionName'], 'stage_int') }}:
    sourceType: STAGE-INT
  ${{ if endsWith(variables['Build.DefinitionName'], 'stage_ext') }}:
    sourceType: STAGE-EXT
  ${{ if endsWith(variables['Build.DefinitionName'], 'prod_int') }}:
    sourceType: PROD-INT
  ${{ if endsWith(variables['Build.DefinitionName'], 'prod_ext') }}:
    sourceType: PROD-EXT

jobs:
- job: Export_config_from_API_Gateway
  variables:
  - template: /${{variables.tenant}}/variables/${{variables.sourceType}}/variables-template.yml
  pool:
    name: '$(agent_pool)'
    vmImage: '$(agent_pool_vmImage)'
  steps:
  - checkout: self
    submodules: "true"
    persistCredentials: "true"
    clean: "true"
  - template: /pipelines/api-export-config-template.yml  # Template reference
    parameters:
      environment: $(environment)
      type: $(sourceType)
      tenant: $(tenant)
  - template: /pipelines/commit-template.yml  # Template reference